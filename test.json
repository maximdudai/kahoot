{
  "game": [
    {
      "question": "Qual é a finalidade principal do LINQ em C#?",
      "options": [
        "Renderizar gráficos na interface do usuário",
        "Consultar e atualizar dados de diferentes fontes",
        "Gerenciar conexões de rede",
        "Compilar código em linguagens de baixo nível"
      ],
      "correct_option_index": 1
    },
    {
      "question": "O que a palavra-chave 'var' em C# especifica na declaração de uma variável?",
      "options": [
        "Que a variável é estaticamente tipada",
        "Que o tipo da variável será inferido pelo compilador",
        "Que a variável deve ser serializada",
        "Que a variável é de tipo dinâmico"
      ],
      "correct_option_index": 1
    },
    {
      "question": "O que representa o padrão de arquitetura MVC?",
      "options": [
        "Model-View-Controller",
        "Model-View-Connection",
        "Memory-View-Controller",
        "Model-Vector-Controller"
      ],
      "correct_option_index": 0
    },
    {
      "question": "Qual componente do MVC é responsável pela lógica de manipulação de dados?",
      "options": [
        "Model",
        "View",
        "Controller",
        "Client"
      ],
      "correct_option_index": 0
    },
    {
      "question": "O que é um Array em C#?",
      "options": [
        "Uma coleção dinâmica de elementos de diferentes tipos",
        "Uma coleção estática de elementos do mesmo tipo",
        "Uma estrutura de dados que permite acesso aleatório",
        "Um método para iterar sobre coleções"
      ],
      "correct_option_index": 1
    },
    {
      "question": "Em C#, o que significa 'Boxing'?",
      "options": [
        "Converter um tipo de valor em um tipo de referência",
        "Empacotar múltiplos objetos em uma única unidade",
        "Criptografar dados",
        "Isolar parte de um código em um espaço de memória privado"
      ],
      "correct_option_index": 0
    },
    {
      "question": "O que uma fila (Queue) em C# representa?",
      "options": [
        "Uma coleção de elementos que segue o princípio LIFO",
        "Uma coleção de elementos que segue o princípio FIFO",
        "Um grupo de threads em execução",
        "Uma coleção de chamadas de função aguardando execução"
      ],
      "correct_option_index": 1
    },
    {
      "question": "Qual método é usado para adicionar um elemento ao final de uma fila em C#?",
      "options": [
        "Push",
        "Enqueue",
        "Add",
        "Insert"
      ],
      "correct_option_index": 1
    },
    {
      "question": "O que é uma 'pilha' em C#?",
      "options": [
        "Uma estrutura de dados que permite acesso aleatório",
        "Uma estrutura de dados que segue o princípio FIFO",
        "Uma estrutura de dados que segue o princípio LIFO",
        "Um método para acessar dados em um banco de dados"
      ],
      "correct_option_index": 2
    },
    {
      "question": "Qual dos seguintes métodos é usado para remover o elemento no topo de uma pilha em C#?",
      "options": [
        "Dequeue",
        "RemoveAt",
        "Pop",
        "Extract"
      ],
      "correct_option_index": 2
    },
    {
      "question": "O que o método 'ContainsKey' faz em um dicionário em C#?",
      "options": [
        "Verifica se um determinado valor está no dicionário",
        "Verifica se uma determinada chave está no dicionário",
        "Adiciona uma chave ao dicionário",
        "Remove uma chave do dicionário"
      ],
      "correct_option_index": 1
    },
    {
      "question": "Em C#, o que são tipos genéricos usados para?",
      "options": [
        "Permitir a execução de código sem compilação",
        "Fornecer uma forma de reutilizar uma mesma função ou classe para diferentes tipos de dados",
        "Criar tipos que não podem ser herdados",
        "Implementar funções matemáticas complexas"
      ],
      "correct_option_index": 1
    },
    {
      "question": "Qual dos seguintes é um benefício do uso de List<T> sobre arrays em C#?",
      "options": [
        "Tamanho fixo",
        "Menor consumo de memória",
        "Flexibilidade de tamanho e métodos adicionais para manipulação",
        "Melhor desempenho em operações de baixo nível"
      ],
      "correct_option_index": 2
    },
    {
      "question": "O que o método 'GetEnumerator' faz em C#?",
      "options": [
        "Reinicia uma aplicação",
        "Gera um número único globalmente",
        "Retorna um iterador para percorrer uma coleção",
        "Compila o código em tempo de execução"
      ],
      "correct_option_index": 2
    },
    {
      "question": "Qual é o princípio de design que sugere que um código deve ser alterado em apenas um lugar?",
      "options": [
        "Don't Repeat Yourself (DRY)",
        "Single Responsibility Principle",
        "Model-View-Controller",
        "First In, First Out"
      ],
      "correct_option_index": 0
    },
    {
      "question": "O que a interface 'IDictionary<T, V>' em C# representa?",
      "options": [
        "Uma coleção de objetos com chaves duplicadas",
        "Uma coleção de pares chave-valor",
        "Uma interface para operações matemáticas",
        "Uma coleção ordenada de objetos"
      ],
      "correct_option_index": 1
    },
    {
      "question": "Quais dos seguintes são operadores válidos de consulta LINQ em C#?",
      "options": [
        "Select, Where, GroupBy",
        "Include, Exclude, Join",
        "Add, Subtract, Multiply",
        "Open, Close, Save"
      ],
      "correct_option_index": 0
    }
  ]
}